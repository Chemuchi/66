# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  setup:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --no-cache-dir -r requirements.txt
        
  docker:
     runs-on: ubuntu-latest
     needs: setup

     steps:
     - name: Checkout Repository
       uses: actions/checkout@v4

     - name: Login to Docker Hub
       uses: docker/login-action@v2
       with:
         username: ${{  secrets.DOCKERHUB_USERNAME  }}
         password: ${{  secrets.DOCKERHUB_TOKEN  }}

     - name: Build and Push Docker image
       run: docker build --platform linux/amd64 -t ${{  secrets.DOCKERHUB_USERNAME  }}/66:latest . --push

  kubernetes:
    runs-on: ubuntu-latest
    needs: docker

    steps: 
    - name: Checkout Repository
      uses: actions/checkout@v4

    # 추후에 공공데이터 OpenAPI 사용하면 Secret.yaml도 추가해야댐~~

    - name: Setup Kubernetes
      run: |
        mkdir -p $HOME/.kube
        echo "${{  secrets.KUBE_CONFIG  }}" | base64 --decode > $HOME/.kube/config

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f Deployment.yaml
        kubectl set image deployment/66-deployment 66-container=${{  secrets.DOCKERHUB_USERNAME  }}/66:latest

    
      
     
      
